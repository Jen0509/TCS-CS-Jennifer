# 📌 HW Week4 - POST 요청하기

## 1. 제목

requests 모듈을 활용하여 GET/POST 요청하기

## 2. 이름

> 김지윤(Jennifer)


## 3. 제출일

> 24.09.30 (월)


## 4. 과제 목표

> requests 모듈을 활용하여 GET/POST 요청하기에 익숙해지기

## 5. GET과 POST의 차이점

> •	GET: 데이터를 가져올 때, URL에 데이터를 포함, 캐싱 가능.
	•	POST: 데이터를 서버로 보낼 때, 본문에 데이터를 포함, 캐싱 불가능.
   그러므로 GET은 주로 검색이나 조회용으로, POST는 데이터를 서버에 전송하는 데 적합하다.

## 6. 응답 상태 코드 해석

> 1xx: 정보 응답 (Informational Responses)

	•	100 Continue: 클라이언트가 요청을 계속해야 한다는 것을 나타냅니다. 주로 요청이 서버에서 잘 수신되었으니, 나머지 요청을 보내도 된다는 의미입니다.
	•	101 Switching Protocols: 클라이언트가 요청한 프로토콜로 서버가 전환 중임을 나타냅니다.

2xx: 성공 (Success)

	•	200 OK: 요청이 성공적으로 처리되었음을 나타냅니다. GET 요청이라면 원하는 데이터가 함께 전송되고, POST 요청이라면 요청이 성공적으로 적용되었음을 의미합니다.
	•	201 Created: 요청이 성공적으로 처리되었고, 리소스가 새로 생성되었음을 나타냅니다.
	•	202 Accepted: 요청이 접수되었지만 처리가 완료되지 않았음을 나타냅니다. (비동기 처리의 경우 사용됨)
	•	204 No Content: 요청이 성공적으로 처리되었으나, 반환할 콘텐츠가 없을 때 사용됩니다.


## 7. API 문서 활용 방법

> 웹 API 문서 중 하나인 [JSONPlaceholder](https://jsonplaceholder.typicode.com/)를 어떻게 참고할 수 있으며, 데이터를 처리할 수 있는지 분석 및 설명해 주세요.
GET 요청을 사용해 서버에서 데이터를 조회할 수 있다.
POST 요청을 사용하여 서버에 새로운 데이터를 보낼 수 있다.
